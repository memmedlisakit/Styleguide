//
// Grid system
// --------------------------------------------------


// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.wt-container {
  .container-fixed(25px);


  @media (min-width: @screen-sm-min) {
    width: @wt-container-sm;
  }
  @media (min-width: @screen-md-min) {
    width: @wt-container-md;
  }

  @media (min-width: @wt-screen-lg-min) {
    // 15px is the browser scroll bar width
    width: (@wt-container-lg - 15px);
  }

  // 100px for the gap between breakpoints
  @media (min-width: (@wt-container-lg + 100px)) {
    width: @wt-container-lg;
  }


}


// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.wt-container-fluid {
  .container-fixed(@wt-grid-gutter-width);
}


// Row
//
// Rows contain and clear the floats of your columns.

.wt-row {
  .make-row(@wt-grid-gutter-width);
}


// Columns
//
// Common styles for small and large grid columns

.wt-make-grid-columns();


// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.


.wt-make-grid(xs);

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: @screen-sm-min) {
  .wt-make-grid(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: @screen-md-min) {
  .wt-make-grid(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: @screen-lg-min) {
  .wt-make-grid(lg);
}
